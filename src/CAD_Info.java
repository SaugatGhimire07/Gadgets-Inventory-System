
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Prajwal Raj Basnet
 */
public class CAD_Info extends javax.swing.JFrame {

    /**
     * Creates new form CAD_Info
     */
    ArrayList <InventoryDetails> list = new ArrayList <> ();
    String range="Authentic";
    String catKeyword="Music";
    DefaultTableModel model;
    public CAD_Info() {
        initComponents();
        
//        setIconImage(Toolkit.getDefaultToolkit().getImage("logo.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton2 = new javax.swing.JRadioButton();
        comboBoxCategory = new javax.swing.JComboBox<>();
        txtPrice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblPr_Name = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtManufacturer = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        jRadioButton3 = new javax.swing.JRadioButton();
        lblManufacturer = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        txtProductCode = new javax.swing.JTextField();
        lblPr_Code = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        chkboxGaming = new javax.swing.JCheckBox();
        chkboxMusic = new javax.swing.JCheckBox();
        chkboxSpyGadgets = new javax.swing.JCheckBox();
        btnQuantityInCategory = new javax.swing.JButton();
        chkboxHealth = new javax.swing.JCheckBox();
        chkboxPhotography = new javax.swing.JCheckBox();
        chkboxEmbeddeble = new javax.swing.JCheckBox();
        btnProductsInCategory = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInfo = new javax.swing.JTable();
        lblSubTitle = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnAddToTable = new javax.swing.JButton();
        btnRemoveRow = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        comboBoxSearchBy = new javax.swing.JComboBox<>();
        lblSearchBy = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gadgets Inventory System");
        setBounds(new java.awt.Rectangle(450, 0, 0, 0));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("logo.png")).getImage());
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));

        jPanel3.setBackground(new java.awt.Color(248, 148, 6));
        jPanel3.setForeground(new java.awt.Color(248, 148, 6));

        jLabel4.setFont(new java.awt.Font("Bodoni MT", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Gadgets Inventory System");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/gadget (2).png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel3)
                        .addGap(211, 211, 211)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel7)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bodoni MT", 1, 22), new java.awt.Color(248, 148, 6))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jRadioButton2.setBackground(new java.awt.Color(44, 62, 80));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("High Copy");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        comboBoxCategory.setForeground(new java.awt.Color(255, 255, 255));
        comboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Music", "Health", "Photography & Fashion", "Embeddeble Hardware", "Gaming", "Spy Gadgets" }));

        txtPrice.setBackground(new java.awt.Color(44, 62, 80));
        txtPrice.setForeground(new java.awt.Color(255, 255, 255));
        txtPrice.setBorder(null);
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Category");

        lblQuantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblQuantity.setForeground(new java.awt.Color(255, 255, 255));
        lblQuantity.setText("Quantity");

        lblPr_Name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPr_Name.setForeground(new java.awt.Color(255, 255, 255));
        lblPr_Name.setText("Product Name");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Range");

        txtManufacturer.setBackground(new java.awt.Color(44, 62, 80));
        txtManufacturer.setForeground(new java.awt.Color(255, 255, 255));
        txtManufacturer.setBorder(null);
        txtManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManufacturerActionPerformed(evt);
            }
        });

        txtProductName.setBackground(new java.awt.Color(44, 62, 80));
        txtProductName.setForeground(new java.awt.Color(255, 255, 255));
        txtProductName.setBorder(null);
        txtProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductNameActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(44, 62, 80));
        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setText("Grade A");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        lblManufacturer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblManufacturer.setForeground(new java.awt.Color(255, 255, 255));
        lblManufacturer.setText("Manufacturer");

        lblPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPrice.setForeground(new java.awt.Color(255, 255, 255));
        lblPrice.setText("Price");

        txtQuantity.setBackground(new java.awt.Color(44, 62, 80));
        txtQuantity.setForeground(new java.awt.Color(255, 255, 255));
        txtQuantity.setBorder(null);
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        jRadioButton1.setBackground(new java.awt.Color(44, 62, 80));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Authentic");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        txtProductCode.setBackground(new java.awt.Color(44, 62, 80));
        txtProductCode.setForeground(new java.awt.Color(255, 255, 255));
        txtProductCode.setBorder(null);
        txtProductCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductCodeActionPerformed(evt);
            }
        });

        lblPr_Code.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPr_Code.setForeground(new java.awt.Color(255, 255, 255));
        lblPr_Code.setText("Product Code");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPr_Code)
                                .addComponent(txtProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPr_Name)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblManufacturer)
                                .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblQuantity)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jRadioButton2)
                                .addGap(33, 33, 33)
                                .addComponent(jRadioButton3)))
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(lblPrice)
                            .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                            .addComponent(jRadioButton1)
                            .addComponent(comboBoxCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPr_Code)
                .addGap(4, 4, 4)
                .addComponent(txtProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPr_Name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblManufacturer)
                .addGap(8, 8, 8)
                .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(lblQuantity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3))
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPrice)
                .addGap(2, 2, 2)
                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(44, 62, 80));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Find Quantity by Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bodoni MT", 1, 22), new java.awt.Color(248, 148, 6))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(44, 62, 80));

        chkboxGaming.setBackground(new java.awt.Color(44, 62, 80));
        buttonGroup2.add(chkboxGaming);
        chkboxGaming.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        chkboxGaming.setForeground(new java.awt.Color(255, 255, 255));
        chkboxGaming.setText("Gaming");

        chkboxMusic.setBackground(new java.awt.Color(44, 62, 80));
        buttonGroup2.add(chkboxMusic);
        chkboxMusic.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        chkboxMusic.setForeground(new java.awt.Color(255, 255, 255));
        chkboxMusic.setSelected(true);
        chkboxMusic.setText("Music");

        chkboxSpyGadgets.setBackground(new java.awt.Color(44, 62, 80));
        buttonGroup2.add(chkboxSpyGadgets);
        chkboxSpyGadgets.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        chkboxSpyGadgets.setForeground(new java.awt.Color(255, 255, 255));
        chkboxSpyGadgets.setText("Spy Gadgets");

        btnQuantityInCategory.setBackground(new java.awt.Color(101, 187, 77));
        btnQuantityInCategory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnQuantityInCategory.setForeground(new java.awt.Color(255, 255, 255));
        btnQuantityInCategory.setText("Total Quantity in a category");
        btnQuantityInCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuantityInCategoryActionPerformed(evt);
            }
        });

        chkboxHealth.setBackground(new java.awt.Color(44, 62, 80));
        buttonGroup2.add(chkboxHealth);
        chkboxHealth.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        chkboxHealth.setForeground(new java.awt.Color(255, 255, 255));
        chkboxHealth.setText("Health");

        chkboxPhotography.setBackground(new java.awt.Color(44, 62, 80));
        buttonGroup2.add(chkboxPhotography);
        chkboxPhotography.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        chkboxPhotography.setForeground(new java.awt.Color(255, 255, 255));
        chkboxPhotography.setText("Photography & Fashion");

        chkboxEmbeddeble.setBackground(new java.awt.Color(44, 62, 80));
        buttonGroup2.add(chkboxEmbeddeble);
        chkboxEmbeddeble.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        chkboxEmbeddeble.setForeground(new java.awt.Color(255, 255, 255));
        chkboxEmbeddeble.setText("Embeddeble Hardware");
        chkboxEmbeddeble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxEmbeddebleActionPerformed(evt);
            }
        });

        btnProductsInCategory.setBackground(new java.awt.Color(101, 187, 77));
        btnProductsInCategory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnProductsInCategory.setForeground(new java.awt.Color(255, 255, 255));
        btnProductsInCategory.setText("Products available in a category");
        btnProductsInCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductsInCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkboxMusic)
                    .addComponent(chkboxSpyGadgets))
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(chkboxHealth)
                        .addGap(18, 18, 18)
                        .addComponent(chkboxPhotography))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(chkboxGaming)
                        .addGap(18, 18, 18)
                        .addComponent(chkboxEmbeddeble)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnProductsInCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuantityInCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkboxMusic)
                    .addComponent(chkboxHealth)
                    .addComponent(chkboxPhotography, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkboxSpyGadgets)
                    .addComponent(chkboxGaming)
                    .addComponent(chkboxEmbeddeble))
                .addGap(18, 18, 18)
                .addComponent(btnQuantityInCategory)
                .addGap(9, 9, 9)
                .addComponent(btnProductsInCategory)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableInfo.setBackground(new java.awt.Color(44, 62, 80));
        tableInfo.setForeground(new java.awt.Color(255, 255, 255));
        tableInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Code", "Product Name", "Manufacturer", "Category", "Quantity", "Range", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableInfo);
        if (tableInfo.getColumnModel().getColumnCount() > 0) {
            tableInfo.getColumnModel().getColumn(1).setPreferredWidth(150);
            tableInfo.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        lblSubTitle.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        lblSubTitle.setForeground(new java.awt.Color(248, 148, 6));
        lblSubTitle.setText("Gadgets Details");

        jPanel5.setBackground(new java.awt.Color(44, 62, 80));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buttons", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bodoni MT", 1, 22), new java.awt.Color(248, 148, 6))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(44, 62, 80));

        btnAddToTable.setBackground(new java.awt.Color(89, 171, 227));
        btnAddToTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddToTable.setForeground(new java.awt.Color(255, 255, 255));
        btnAddToTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/round-add-button.png"))); // NOI18N
        btnAddToTable.setText("Add to Table");
        btnAddToTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToTableActionPerformed(evt);
            }
        });

        btnRemoveRow.setBackground(new java.awt.Color(247, 145, 45));
        btnRemoveRow.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRemoveRow.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveRow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete-button.png"))); // NOI18N
        btnRemoveRow.setText("Remove row");
        btnRemoveRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveRowActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(8, 119, 149));
        btnClear.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cancel.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(240, 52, 52));
        btnExit.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/logout.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(37, 172, 129));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icon.png"))); // NOI18N
        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnExit1.setBackground(new java.awt.Color(153, 0, 51));
        btnExit1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExit1.setForeground(new java.awt.Color(255, 255, 255));
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete-button.png"))); // NOI18N
        btnExit1.setText("Delete table");
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnAddToTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemoveRow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddToTable, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveRow, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnExit1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        btnSearch.setBackground(new java.awt.Color(93, 66, 255));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/magnifying-glass.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        comboBoxSearchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Price", "Name" }));
        comboBoxSearchBy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxSearchByItemStateChanged(evt);
            }
        });
        comboBoxSearchBy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxSearchByMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                comboBoxSearchByMouseReleased(evt);
            }
        });
        comboBoxSearchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSearchByActionPerformed(evt);
            }
        });

        lblSearchBy.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        lblSearchBy.setForeground(new java.awt.Color(255, 255, 255));
        lblSearchBy.setText("Search By");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblSearchBy)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblSubTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch)))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(61, 61, 61)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34))
                            .addComponent(jScrollPane1))
                        .addGap(26, 26, 26))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearchBy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSubTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchField)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("User manual");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        range = "High Copy";
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManufacturerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufacturerActionPerformed

    private void txtProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductNameActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        range = "Grade A";
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void txtProductCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductCodeActionPerformed

    private void btnQuantityInCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuantityInCategoryActionPerformed
        // TODO add your handling code here:
        updateCategoryKeyword();
        int[] result = categorySearch(list,catKeyword);
        if(result.length==0)
        {
            JOptionPane.showMessageDialog(rootPane, "There are no any items with of this category right now in the inventory.");
        }
        else
        {
            int totalQuantity=0;
            for(int i = 0; i<result.length; i++)
            {
                totalQuantity+=list.get(result[i]).getQuantity();
            }
            JOptionPane.showMessageDialog(rootPane, "There are total "+totalQuantity+" items of "+catKeyword+" category.");
        }
         
    }//GEN-LAST:event_btnQuantityInCategoryActionPerformed

    private void chkboxEmbeddebleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxEmbeddebleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkboxEmbeddebleActionPerformed

    private void btnProductsInCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductsInCategoryActionPerformed
        // TODO add your handling code here:
        updateCategoryKeyword();
        int[] result = categorySearch(list,catKeyword);
        if(result.length==0)
        {
            JOptionPane.showMessageDialog(rootPane, "There are no any items with of this category right now in the inventory.");
        }
        else
        {
            String names = "";
            for(int i=0; i<result.length; i++)
            {
                String resultName = list.get(result[i]).getProductName();
                names+= resultName+", ";
            }
            JOptionPane.showMessageDialog(rootPane, "There are total "+result.length+" items of this category. "+"And they are: "+names);
        }
        
    }//GEN-LAST:event_btnProductsInCategoryActionPerformed

    private void btnAddToTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToTableActionPerformed
        // TODO add your handling code here:\
        try
        {
            String productCode, productName, manufacturer,category;
            if(txtProductCode.getText().equals("")||txtProductName.getText().equals("")||txtManufacturer.getText().equals("")||txtPrice.getText().equals("")||txtQuantity.getText().equals(""))
            {
                JOptionPane.showMessageDialog(rootPane,"One or more fields are missing!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                productCode = txtProductCode.getText().trim();
                productName = txtProductName.getText();
                manufacturer = txtManufacturer.getText();
                int quantity = Integer.parseInt(txtQuantity.getText());  
                int price = Integer.parseInt(txtPrice.getText());
                if(quantity<=0)
                {
                    JOptionPane.showMessageDialog(rootPane,"Quantity  cannot be zero or less to add in the inventory!", "Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                else if(price<=0)
                {
                    JOptionPane.showMessageDialog(rootPane,"Price  cannot be zero or less to add in the inventory!", "Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                category = comboBoxCategory.getSelectedItem().toString();
                boolean flag = false;
                if(tableInfo.getRowCount()==0)
                    {
                        flag= true;
                    }
                for(InventoryDetails row: list)
                {
                    if(row.getProductCode().equals(productCode))
                        {
                            JOptionPane.showMessageDialog(rootPane,"ProductCode matches to previous record.");
                            flag=false;
                            break; 
                        }
                    else if(row.getProductName().equals(productName))
                    {
                        if(!(row.getRange().equals(range))||!(row.getManufacturer().equals(manufacturer)))
                        {
                            flag = true;
                        }
                        else
                            {
                                JOptionPane.showMessageDialog(rootPane,"The product is already in the inventory with different product code.");
                                flag=false;
                                break; 
                            }
                    }
                    
                    else
                    {
                        flag=true;
                    }
                }
                if(flag==true)
                {
                    model = (DefaultTableModel) tableInfo.getModel();
                    model.addRow(new Object [] {productCode, productName, manufacturer, category,quantity,range,price});
                    InventoryDetails object = new InventoryDetails(productCode, productName, manufacturer, quantity, price, range, category);
                    list.add(object);
                } 
            }  
        }
        
        catch(NumberFormatException numex)
        {
            JOptionPane.showMessageDialog(rootPane,"Quantity and Price should be given in number!", "Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddToTableActionPerformed

    private void btnRemoveRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveRowActionPerformed
        // TODO add your handling code here:
        if(list.isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane,"Add data to table first!", "Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(tableInfo.getSelectedRow()==-1)
        {
            JOptionPane.showMessageDialog(rootPane,"Please select any row to delete!", "Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            list.remove(tableInfo.getSelectedRow());
            model.removeRow(tableInfo.getSelectedRow());
        }
    }//GEN-LAST:event_btnRemoveRowActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_btnExitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            int row = tableInfo.getSelectedRow();
            int column = tableInfo.getSelectedColumn();
            if(tableInfo.isEditing())
            {
              tableInfo.getCellEditor().stopCellEditing(); 
            }
            int newvalue;
//            tableInfo.setValueAt(value,row,column);
            if(column==4)
            {
                newvalue = Integer.parseInt( tableInfo.getValueAt(row,4).toString());
                list.get(row).setQuantity(newvalue);
            }
            else if(column==6)
            {
                newvalue = Integer.parseInt( tableInfo.getValueAt(row, 6).toString());
                list.get(row).setPrice(newvalue);
            }
        }
        catch(ArrayIndexOutOfBoundsException nullex)
        {
            JOptionPane.showMessageDialog(rootPane, "In order to update entry, select the row and edit its column value first! ", "Error", JOptionPane.ERROR_MESSAGE);
            
        }
        catch(NumberFormatException numex)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter number value to update price or quantity.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
                try{
                        
                        int result=0;
                        if(comboBoxSearchBy.getSelectedIndex()==0)
                        {
                            mergeSort(list);
                            int value = Integer.parseInt(searchField.getText());
                            result = binarySearchPrice(list,0,list.size()-1,value);
                        }
                        else if(comboBoxSearchBy.getSelectedIndex()==1)
                        {
                            bubbleSortName(list);
                            String keyword = searchField.getText();
                            result = binarySearchName(list,0,list.size()-1,keyword);
                        }
                        sortTable(list);
                        if(result==-1)
                        {
                            JOptionPane.showMessageDialog(rootPane,"There is no any product with entered keyword.","Error",JOptionPane.ERROR_MESSAGE);
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane,"Product Code: "+list.get(result).getProductCode()+"\n"+"Product Name: "+list.get(result).getProductName()+"\n"+"Manufacturer: "+list.get(result).getManufacturer()+"\n"+"Range: "+list.get(result).getRange()+"\n"+"Category: "+list.get(result).getCategory(),"Information",JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                catch (NumberFormatException num){
                        JOptionPane.showMessageDialog(rootPane, "Enter a number value to search with Price.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
        
                catch(NullPointerException nullex){
                        JOptionPane.showMessageDialog(rootPane, "Please add records to table ", "Error", JOptionPane.ERROR_MESSAGE);
                }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        openFile();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       try 
        {
           Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler " + "C:\\Users\\SHAUGAT\\OneDrive\\Desktop\\manual.pdf" );
        } 
        catch (Exception e) 
        { 
            JOptionPane.showMessageDialog(null, "Error"); 
        } 
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void comboBoxSearchByMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxSearchByMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_comboBoxSearchByMouseClicked

    private void comboBoxSearchByMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxSearchByMouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_comboBoxSearchByMouseReleased

    private void comboBoxSearchByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSearchByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxSearchByActionPerformed

    private void comboBoxSearchByItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxSearchByItemStateChanged
        // TODO add your handling code here:
        try
        {
           if(comboBoxSearchBy.getSelectedIndex()==0)
        {
            mergeSort(list);
            sortTable(list);
        }
        else if(comboBoxSearchBy.getSelectedIndex()==1)
        {
            bubbleSortName(list);
            sortTable(list);
        } 
        }
        catch(NullPointerException ex)
        {
            
        }
        
    }//GEN-LAST:event_comboBoxSearchByItemStateChanged

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        // TODO add your handling code here:
        try
        {
             model.setRowCount(0);
            list.clear();
        }
        catch(NullPointerException nullex)
        {
            JOptionPane.showMessageDialog(rootPane,"There is no data in the table to delete.","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExit1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        range="Authentic";
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        UIManager.put( "control", new Color( 128, 128, 128) );
  UIManager.put( "info", new Color(128,128,128) );
  UIManager.put( "nimbusBase", new Color( 18, 30, 49) );
  UIManager.put( "nimbusAlertYellow", new Color( 248, 187, 0) );
  UIManager.put( "nimbusDisabledText", new Color( 128, 128, 128) );
  UIManager.put( "nimbusFocus", new Color(115,164,209) );
  UIManager.put( "nimbusGreen", new Color(176,179,50) );
  UIManager.put( "nimbusInfoBlue", new Color( 66, 139, 221) );
  UIManager.put( "nimbusLightBackground", new Color( 18, 30, 49) );
  UIManager.put( "nimbusOrange", new Color(191,98,4) );
  UIManager.put( "nimbusRed", new Color(169,46,34) );
  UIManager.put( "nimbusSelectedText", new Color( 255, 255, 255) );
  UIManager.put( "nimbusSelectionBackground", new Color( 104, 93, 156) );
  UIManager.put( "text", new Color( 230, 230, 230) );
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CAD_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CAD_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CAD_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CAD_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CAD_Info().setVisible(true);
            }
        });
    }
    
    private  void mergeSort(ArrayList <InventoryDetails> a){
        if(a.size() <=1)
        {
             return; 
        }
        int firstLength = a.size()/2;
        int secondLength = a.size() - firstLength;
        ArrayList <InventoryDetails> first = new  ArrayList();
        ArrayList <InventoryDetails> second = new  ArrayList();
        for(int i=0; i < firstLength; i++){
            first.add( a.get(i));
        }
        
        for(int i =0; i<secondLength; i++){
           second.add(a.get(firstLength+i ));
        } 
        mergeSort(first);
        mergeSort(second);
        merge(first, second, a);
    }
    
    private static void merge(ArrayList <InventoryDetails> first, ArrayList <InventoryDetails> second, ArrayList <InventoryDetails> a){
        int iFirst = 0;
        int iSecond = 0;
        int j = 0;
        while(iFirst<first.size() && iSecond<second.size()){
            if(first.get(iFirst).getPrice()<second.get(iSecond).getPrice()){
                a.set(j, first.get(iFirst));
                iFirst++;
            } 
            else {
                a.set(j, second.get(iSecond));
                iSecond++;
            }
            j++;
        }
        while(iFirst<first.size()){
            a.set(j,first.get(iFirst));
            iFirst++; j++;
        }
        
        while(iSecond < second.size()){
            a.set(j, second.get(iSecond));
            iSecond++; j++;
        }
    }
    
    private int binarySearchPrice(ArrayList <InventoryDetails> list, int first, int last, int value)
    {
        if(first<=last)
        {
            int middle = (first + last)/2;
            if(list.get(middle).getPrice()==value)
            {
                return middle;
            }
            else if(list.get(middle).getPrice()>value)
            {
                return binarySearchPrice(list,first,middle-1,value);
            }
            else if(list.get(middle).getPrice()<value)
            {
                return binarySearchPrice(list,middle+1,last,value);
            }
        }
        return -1;      
    }
    
    public void sortTable(ArrayList <InventoryDetails> list)
    {
        model.setRowCount(0);
        for(int i=0; i<list.size();i++)
        {
            model.addRow(new Object [] {list.get(i).getProductCode(),list.get(i).getProductName(),list.get(i).getManufacturer(),list.get(i).getCategory(),list.get(i).getQuantity(),list.get(i).getRange(),list.get(i).getPrice()});
        }
    }
    
    private  int[] categorySearch(ArrayList <InventoryDetails> list, String cat) {
        int [] indices = new int[list.size()];
        int count = 0;
        for(int i = 0; i<list.size(); i++)
        {
            if(list.get(i).getCategory().equals(cat))
            {
                indices[count++]=i;
            } 
        }
        int [] result = new int[count];
        for(int i=0; i<result.length; i++)
        {
            result[i]=indices[i];
        }
        return result;
    }
    
    private void bubbleSortName(ArrayList <InventoryDetails> a) {
        int i;
        boolean sorted = false;
        while(!(sorted))
        {
            sorted = true;
            for(i=0; i<a.size()-1; i++)
            {
                if(a.get(i).getProductName().compareToIgnoreCase(a.get(i+1).getProductName())>0){
                    InventoryDetails temp = a.get(i);
                    a.set(i, a.get(i+1));
                    a.set(i+1, temp);
                    sorted = false;
                }
            }
        }
    }
    
    private int binarySearchName(ArrayList <InventoryDetails> list, int first, int last, String keyword)
    {
        if(first<=last)
        {
            int middle = (first + last)/2;
            if(list.get(middle).getProductName().compareToIgnoreCase(keyword)==0)
            {
                return middle;
            }
            else if(list.get(middle).getProductName().compareToIgnoreCase(keyword)>0)
            {
                return binarySearchName(list,first,middle-1,keyword);
            }
            else if(list.get(middle).getProductName().compareToIgnoreCase(keyword)<0)
            {
                return binarySearchName(list,middle+1,last,keyword);
            }
        }
        return -1;      
    }
    
    private void updateCategoryKeyword(){
    if(chkboxMusic.isSelected())
        {
            catKeyword="Music";
        }
        else if(chkboxHealth.isSelected())
        {
            catKeyword="Health";
        }
        else if(chkboxPhotography.isSelected())
        {
            catKeyword="Photography & Fashion";
        }
        else if(chkboxSpyGadgets.isSelected())
        {
            catKeyword="Spy Gadgets";
        }
        else if(chkboxGaming.isSelected())
        {
            catKeyword="Gaming";
        }
        else if(chkboxEmbeddeble.isSelected())
        {
           catKeyword="Embeddeble Hardware";
        }
    }
    
    private void clear()
    {
        txtProductCode.setText("");
        txtProductName.setText("");
        txtManufacturer.setText("");
        txtQuantity.setText("");
        txtPrice.setText("");
        comboBoxCategory.setSelectedIndex(0);
    }
    
    private void exit() {
       WindowEvent winCloseEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
       Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winCloseEvent);
    }
    
    private void openFile()
    {
        try 
        {
           Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler " + "C:\\Users\\SHAUGAT\\OneDrive\\Desktop\\obj.txt" );
        } 
        catch (Exception e) 
        { 
            JOptionPane.showMessageDialog(null, "Error"); 
        } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToTable;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton btnProductsInCategory;
    private javax.swing.JButton btnQuantityInCategory;
    private javax.swing.JButton btnRemoveRow;
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chkboxEmbeddeble;
    private javax.swing.JCheckBox chkboxGaming;
    private javax.swing.JCheckBox chkboxHealth;
    private javax.swing.JCheckBox chkboxMusic;
    private javax.swing.JCheckBox chkboxPhotography;
    private javax.swing.JCheckBox chkboxSpyGadgets;
    private javax.swing.JComboBox<String> comboBoxCategory;
    private javax.swing.JComboBox<String> comboBoxSearchBy;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel lblManufacturer;
    private javax.swing.JLabel lblPr_Code;
    private javax.swing.JLabel lblPr_Name;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblSearchBy;
    private javax.swing.JLabel lblSubTitle;
    private javax.swing.JTextField searchField;
    private javax.swing.JTable tableInfo;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductCode;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
